select * from customers;
select * from books;
select * from orders;

-- 1) Retrieve all books in the "Fiction" genre:
select * from books 
where genre = "Fiction";


-- 2) Find books published after the year 1950:
select * from books 
where Published_Year >1950 order by Published_Year;


-- 3) List all customers from the Canada:
select * from customers
where country = "Canada";


-- 4) Show orders placed in November 2023:
select * from orders
where order_date between "2023-11-01" and "2023-11-30";


-- 5) Retrieve the total stock of books available:
select sum(stock) as totalstock
from books;


-- 6) Find the details of the most expensive book:
select * from books
order by price desc limit 1;


-- 7) Show all customers who ordered more than 1 quantity of a book:
select * from orders
where Quantity >1;


-- 8) Retrieve all orders where the total amount exceeds $20:
select * from orders 
where Total_Amount > 20 order by Total_Amount;


-- 9) List all genres available in the Books table:
select distinct genre from books; 


-- 10) Find the book with the lowest stock:
select * from books
order by stock asc limit 1; 

-- 11) Calculate the total revenue generated from all orders:
select sum(Total_Amount) as Revenue from orders;


-- Advance Questions : 
-- 1) Retrieve the total number of books sold for each genre:
select * from orders; 
select * from books;
select b.genre, sum(o.quantity) as totalbookssold 
from orders o 
join books b on b.book_id = o.book_id
group by b.genre; 


-- 2) Find the average price of books in the "Fantasy" genre:
select avg(price) as avgprice 
from books where genre = "Fantasy";


-- 3) List customers who have placed at least 2 orders:
select c.customer_id, c.name, count(o.order_id) as order_count
from orders o 
join customers c on o.Customer_ID= c.Customer_ID 
group by o.Customer_Id, c.name
having count(order_id) >= 2;


-- 4) Find the most frequently ordered book:
select o.book_id, b.title, count(o.order_id) as order_count
from orders o 
join books b on o.book_id =b.book_id
group by o.book_id, b.title 
order by order_count desc limit 1;


-- 5) Show the top 3 most expensive books of 'Fantasy' Genre :
select * from books
where genre = "Fantasy"
order by price desc limit 3;


-- 6) Retrieve the total quantity of books sold by each author:
select b.author, sum(o.quantity) as totalqtysold
from books b join orders o
on b.book_id = o.book_id
group by b.author;


-- 7) List the cities where customers who spent over $30 are located:
select distinct c.city,c.name, o.total_amount from orders o
join customers c on o.Customer_ID = c.customer_id
where o.Total_Amount >30;


-- 8) Find the customer who spent the most on orders:
select c.customer_id, c.name, sum(o.total_amount) as totalspent 
from orders o join customers c
on o.customer_id = c.customer_id
group by c.customer_id, c.name
order by totalspent desc;


-- 9) Calculate the stock remaining after fulfilling all orders:
select b.book_id, b.title, b.stock, coalesce(sum(quantity),0) as ordrqty,
b.stock - coalesce(sum(quantity),0) as remainingqty
from books b left join orders o
on b.book_id = o.book_id
group by b.book_id
order by b.book_id; 